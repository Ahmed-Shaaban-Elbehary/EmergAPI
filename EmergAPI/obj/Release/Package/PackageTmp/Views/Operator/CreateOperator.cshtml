@model EmergAPI.Models.Operator
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}


<br />
<div>
    @Html.ActionLink("Back to List", "Index")
</div>
<br />
<div class="box">
    <div class="box-header">
        <h3 class="box-title">Operator</h3>
    </div>
    @using (Html.BeginForm())
    {
        <div class="box-body">
            <div class="col-md-6">
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                <div class="form-group">
                    @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Email, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Password, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.Password, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Password, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.ConfirmPassword, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.ConfirmPassword, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ConfirmPassword, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.IdentificationNumber, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.IdentificationNumber, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.IdentificationNumber, "", new { @class = "text-danger" })

                </div>
            </div>
            <div class="col-md-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.MobilePhone, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.MobilePhone, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.MobilePhone, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Birthdate, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.Birthdate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Birthdate, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Hiredate, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.Hiredate, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Hiredate, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    @Html.LabelFor(model => model.Salary, htmlAttributes: new { @class = "control-label" })

                    @Html.EditorFor(model => model.Salary, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Salary, "", new { @class = "text-danger" })

                </div>
                <div class="form-group">
                    <div class="checkbox">
                        <label>
                            @Html.RadioButtonFor(model => model.Gender, "Male") Male
                            @Html.RadioButtonFor(model => model.Gender, "Female") Female
                            @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                        </label>
                        <label class="pull-right">
                            @Html.CheckBoxFor(model => model.IsAdmin, true) ...Is admin?!
                            @Html.ValidationMessageFor(model => model.IsAdmin, "", new { @class = "text-danger" })
                        </label>
                    </div>

                </div>
            </div>
        </div>
        <div class="box-footer">
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-success" />
            </div>
        </div>
    }
</div>

<br />
<br />
<script src="~/Scripts/jquery-3.1.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>